function [ output_string ] = remove_common_words( string )
%UNTITLED Summary of this function goes here
%   Detailed explanation goes here
output_string = {''};
split_string = strsplit(lower(char(string)));
for word_cell = split_string
    word = char(word_cell);
    if ~isempty(word) && isempty(regexp(word, '[#@]')) && isempty(regexp(word, '://'))
        word = regexprep(word, '[^a-z]', '');
        if ~isempty(regexp(word, '^[^#@].*[a-z]', 'once')) && ...
                ~strcmp(word, 'the') && ...
                ~strcmp(word, 'be') && ~strcmp(word, 'to') && ...
                ~strcmp(word, 'of') && ~strcmp(word, 'and') && ...
                ~strcmp(word, 'a') && ~strcmp(word, 'in') && ...
                ~strcmp(word, 'that') && ~strcmp(word, 'have') && ...
                ~strcmp(word, 'I') && ~strcmp(word, 'it') && ...
                ~strcmp(word, 'for') && ~strcmp(word, 'not') && ...
                ~strcmp(word, 'on') && ~strcmp(word, 'with') && ...
                ~strcmp(word, 'he') && ~strcmp(word, 'as') && ...
                ~strcmp(word, 'you') && ~strcmp(word, 'do') && ...
                ~strcmp(word, 'at') && ~strcmp(word, 'this') && ...
                ~strcmp(word, 'but') && ~strcmp(word, 'his') && ...
                ~strcmp(word, 'by') && ~strcmp(word, 'from') && ...
                ~strcmp(word, 'they') && ~strcmp(word, 'we') && ...
                ~strcmp(word, 'say') && ~strcmp(word, 'her') && ...
                ~strcmp(word, 'she') && ~strcmp(word, 'or') && ...
                ~strcmp(word, 'an') && ~strcmp(word, 'will') && ...
                ~strcmp(word, 'my') && ~strcmp(word, 'one') && ...
                ~strcmp(word, 'all') && ~strcmp(word, 'would') && ...
                ~strcmp(word, 'there') && ~strcmp(word, 'their') && ...
                ~strcmp(word, 'what') && ~strcmp(word, 'so') && ...
                ~strcmp(word, 'up') && ~strcmp(word, 'out') && ...
                ~strcmp(word, 'if') && ~strcmp(word, 'about') && ...
                ~strcmp(word, 'who') && ~strcmp(word, 'get') && ...
                ~strcmp(word, 'which') && ~strcmp(word, 'go') && ...
                ~strcmp(word, 'me') && ~strcmp(word, 'when') && ...
                ~strcmp(word, 'make') && ~strcmp(word, 'can') && ...
                ~strcmp(word, 'like') && ~strcmp(word, 'time') && ...
                ~strcmp(word, 'no') && ~strcmp(word, 'just') && ...
                ~strcmp(word, 'him') && ~strcmp(word, 'know') && ...
                ~strcmp(word, 'take') && ~strcmp(word, 'people') && ...
                ~strcmp(word, 'into') && ~strcmp(word, 'year') && ...
                ~strcmp(word, 'your') && ~strcmp(word, 'good') && ...
                ~strcmp(word, 'some') && ~strcmp(word, 'could') && ...
                ~strcmp(word, 'them') && ~strcmp(word, 'see') && ...
                ~strcmp(word, 'other') && ~strcmp(word, 'than') && ...
                ~strcmp(word, 'then') && ~strcmp(word, 'now') && ...
                ~strcmp(word, 'look') && ~strcmp(word, 'only') && ...
                ~strcmp(word, 'come') && ~strcmp(word, 'its') && ...
                ~strcmp(word, 'over') && ~strcmp(word, 'think') && ...
                ~strcmp(word, 'also') && ~strcmp(word, 'back') && ...
                ~strcmp(word, 'after') && ~strcmp(word, 'use') && ...
                ~strcmp(word, 'two') && ~strcmp(word, 'how') && ...
                ~strcmp(word, 'our') && ~strcmp(word, 'work') && ...
                ~strcmp(word, 'first') && ~strcmp(word, 'well') && ...
                ~strcmp(word, 'way') && ~strcmp(word, 'even') && ...
                ~strcmp(word, 'new') && ~strcmp(word, 'want') && ...
                ~strcmp(word, 'because') && ~strcmp(word, 'any') && ...
                ~strcmp(word, 'these') && ~strcmp(word, 'give') && ...
                ~strcmp(word, 'day') && ~strcmp(word, 'most') && ...
                ~strcmp(word, 'us')

            if isempty(output_string)
                output_string = word;
            else
                output_string = strcat(output_string, {' '}, word);
            end
        end
    end
end


end